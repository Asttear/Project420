@inject IJSRuntime JS
@inject MasaBlazor Masa
@implements IDisposable

<MAppBar App ClippedLeft Flat Style="background-color:white; border-bottom: 1px solid #E0E0E0">
    <div style="position:absolute">
        @if (ShowBackButton)
        {
            <MButton Icon="true" Class="ml-n3" OnClick="GoBack">
                <MIcon>mdi-arrow-left</MIcon>
            </MButton>
        }
        else
        {
            <MChip Href="/" Class="text-subtitle-2">病去如风</MChip>
        }
    </div>
    <MToolbarTitle Class="flex-grow-1 text-md-center">@PageTitle</MToolbarTitle>
</MAppBar>

@code {
    [Parameter]
    public bool ShowBackButton { get; set; }

    [Parameter]
    public string PageTitle { get; set; } = "";

    public void Dispose()
    {
        Masa.BreakpointChanged -= OnBreakpointChanged;
    }

    protected override void OnInitialized()
    {
        Masa.BreakpointChanged += OnBreakpointChanged;
    }

    private async void OnBreakpointChanged(object? sender, BreakpointChangedEventArgs e)
        => await InvokeAsync(StateHasChanged);

    private async Task GoBack()
    {
        await JS.InvokeVoidAsync("history.back");
    }
}
