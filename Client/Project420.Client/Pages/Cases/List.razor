@page "/Cases"
@inherits InfinitePage
@inject IApiService ApiService

<MRow Class="overflow-y-auto" Style="height:calc(100vh - 120px)" Justify="JustifyTypes.Center" @ref="_container">
    <div class="d-flex flex-column pa-4" style="width:800px; max-width:100%; row-gap:16px">
        @foreach (var caseItem in _cases)
        {
            <MHover>
                <MCard @attributes="context.Attrs"
                   Class="transition-swing"
                   Href="@($"/Cases/{caseItem.Id}")"
                   Elevation="@(context.Hover ? 10 : 2)">
                    <MListItem ThreeLine="true">
                        <MListItemAvatar Size="64" Class="align-self-center">
                            <MIcon Size="64">mdi-account-circle</MIcon>
                        </MListItemAvatar>
                        <MListItemContent>
                            <div class="text-overline">
                                @caseItem.Author
                            </div>
                            <MListItemTitle Class="text-h5 mb-4">
                                @caseItem.Date?.ToString("D")
                            </MListItemTitle>
                            @*
                            <MListItemSubtitle>@discussion.CreatedTime?.LocalDateTime</MListItemSubtitle>
                            *@
                        </MListItemContent>
                    </MListItem>
                </MCard>
            </MHover>
        }
        <MInfiniteScroll Threshold="5"
                         HasMore="_hasMore"
                         OnLoadMore="async () => await LoadMore(_cases, LoadCases)"
                         Parent="_container?.Ref">
        </MInfiniteScroll>
    </div>
</MRow>

@code {
    [CascadingParameter]
    MainLayout Layout { get; set; } = null!;

    MRow? _container;
    List<CaseMetadata> _cases = new();

    protected override async Task OnInitializedAsync()
    {
        Layout.Config = new("诊疗案例");
        await LoadMore(_cases, LoadCases);
    }

    Task<IList<CaseMetadata>?> LoadCases() => ApiService.ListCasesAsync(_cases.Count);
}
