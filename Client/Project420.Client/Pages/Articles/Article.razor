@page "/Articles/{Id}"
@inherits InfinitePage
@inject IApiService ApiService

@if (_article is null)
{
    <CenterProgressCircular />
}
else
{
    <MRow Class="overflow-y-auto" Style="height:calc(100vh - 120px)" Justify="JustifyTypes.Center" @ref="_container">
        <div class="d-flex flex-column pa-4" style="width:1200px; max-width:100%; row-gap:16px">
            <MCard Class="pa-4">
                <article>
                    <header>
                        <MCardTitle>
                            <h1 class="text-h4">@_article.Title</h1>
                        </MCardTitle>
                        <MCardSubtitle>
                            <MChipGroup>
                                <MChip>
                                    <MIcon Left="true">mdi-account</MIcon>
                                    @_article.Source
                                </MChip>
                                <MChip>
                                    <MIcon Left="true">mdi-clock</MIcon>
                                    @_article.CreatedTime?.LocalDateTime
                                </MChip>
                            </MChipGroup>
                        </MCardSubtitle>
                    </header>
                    <MCardText Class="text-body-1">
                        @((MarkupString)(_article.HtmlContent ?? ""))
                    </MCardText>
                </article>
            </MCard>
            <MCard Class="pa-4">
                <MCardTitle>
                    评论
                </MCardTitle>
                <MCardSubtitle>
                    畅所欲言！
                </MCardSubtitle>
                <MCardText Class="text-body-1">
                    <AuthorizeView>
                        <Authorized>
                            <div class="d-flex flex-column">
                                <MTextarea Disabled="@_editDisabled" Class="mx-2" AutoGrow="true" Label="评论内容" @bind-Value="_commentField"></MTextarea>
                                <MButton Class="align-self-end" Disabled="@_editDisabled" Color="primary" OnClick="PublishComment">发表评论</MButton>
                            </div>
                        </Authorized>
                        <NotAuthorized>
                            <div class="font-weight-bold">
                                <a href="Features/Authentication/Login">登录</a> 以发表评论。
                            </div>
                        </NotAuthorized>
                    </AuthorizeView>
                    <div class="d-flex flex-column mt-4" style="row-gap:16px">
                        @foreach (var comment in _comments)
                        {
                            <MCard Outlined="true">
                                <article>
                                    <header>
                                        <MCardTitle>
                                            <MChipGroup>
                                                <MChip>
                                                    <MIcon Left="true">mdi-account</MIcon>
                                                    @comment.Author
                                                </MChip>
                                                <MChip>
                                                    <MIcon Left="true">mdi-clock</MIcon>
                                                    @comment.CreatedTime?.LocalDateTime
                                                </MChip>
                                            </MChipGroup>
                                        </MCardTitle>
                                    </header>
                                    <MCardText Class="mt-n4 text-body-1">
                                        @((MarkupString)(comment.HtmlContent ?? ""))
                                    </MCardText>
                                </article>
                            </MCard>
                        }
                    </div>
                </MCardText>
            </MCard>
            <MInfiniteScroll Threshold="5"
                         HasMore="_hasMore"
                         OnLoadMore="async () => await LoadMore(_comments, LoadComments)"
                         Parent="_container?.Ref">
            </MInfiniteScroll>
        </div>
        <MSnackbar @bind-Value="_published" Timeout="2000" Absolute="true" Bottom="true">
            评论已发表！
        </MSnackbar>
    </MRow>
}

@code {
    [Parameter]
    public string Id { get; set; } = null!;

    [CascadingParameter]
    MainLayout Layout { get; set; } = null!;

    MRow? _container;
    ArticleModel? _article;
    List<CommentModel> _comments = new();
    string _commentField = "";

    bool _published = false;
    bool _editDisabled = false;

    protected override async Task OnInitializedAsync()
    {
        Layout.Config = new("加载中", true, true);
        _article = await ApiService.GetArticleAsync(Id);
        StateHasChanged();
        await LoadMore(_comments, LoadComments);
    }

    protected override void OnParametersSet()
    {
        if (_article is not null)
            Layout.Config = Layout.Config with { PageTitle = _article.Title ?? "文章" };
    }

    Task<IList<CommentModel>?> LoadComments() => ApiService.GetCommentsAsync(Id, _comments.Count);

    async void PublishComment()
    {
        _editDisabled = true;
        await ApiService.AddCommentAsync(Id, _commentField);
        _commentField = "";
        _published = true;
        _editDisabled = false;
        StateHasChanged();
        await LoadMore(_comments, LoadComments);
    }
}
